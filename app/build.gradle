plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

ext.versionMajor = 1
ext.versionMinor = 0
ext.versionClassifier = null
ext.isSnapshot = false
ext.minimumSdkVersion = 21
android {
    def versionPropsFile = file('version.properties')
    def versionBuild
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    ext.autoIncrementBuildNumber = {
        if (versionPropsFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            ext.versionNum = versionBuild;
            versionProps['VERSION_BUILD'] = versionBuild.toString()

            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new FileNotFoundException("Could not read version.properties!")
        }
    }

    compileSdk 31

    defaultConfig {
        versionCode versionBuild
        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"
        multiDexEnabled true
        applicationId "com.dpassets.codebase"
        minSdkVersion project.ext.minimumSdkVersion
        targetSdk 31

        versionCode generateVersionCode(versionBuild)
        versionName generateVersionName(versionBuild)
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_PLATFORM=android-15',
                        '-DANDROID_TOOLCHAIN=clang'
            }
        }
    }

    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(assembleRelease)) {
            autoIncrementBuildNumber()
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", 'app_name', "CodeBase-DEBUG"
            buildConfigField "String", 'BASE_URL', '"https://test.com/api/"'
        }
        staging {
            applicationIdSuffix ".staging"
            resValue "string", 'app_name', "CodeBase-STAGING"
            buildConfigField "String", 'BASE_URL', '"https://test.com/api/"'
            debuggable true
        }
        release {
            resValue "string", 'app_name', "CodeBase"
            buildConfigField "String", 'BASE_URL', '"https://test.com/api"'
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        dataBinding = true
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

private Integer generateVersionCode(Integer val) {
    return ext.minimumSdkVersion * 10000000 + ext.versionMajor * 1000000 + ext.versionMinor * 10000 + val
}

private String generateVersionName(Integer val) {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${val}"
    if (ext.versionClassifier == null && ext.isSnapshot) {
        ext.versionClassifier = "SNAPSHOT"
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName;
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'com.android.support:multidex:1.0.3'

    /*Hilt*/
    implementation 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'com.google.dagger:hilt-android:2.42'
    kapt 'com.google.dagger:hilt-android-compiler:2.42'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation "androidx.activity:activity-ktx:1.5.1"

    /*Retrofit*/
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    /*Glide*/
    implementation 'com.github.bumptech.glide:glide:4.13.0'

    /*Lifecycle*/
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.1'

    /*Coroutines*/
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'

    /*Livedata*/
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'

    /*Utils*/
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    implementation 'com.github.joielechong:countrycodepicker:2.4.2'
    implementation 'io.michaelrocks:libphonenumber-android:8.12.52'
    implementation 'com.facebook.shimmer:shimmer:0.4.0'
    implementation 'com.github.dhaval2404:imagepicker:1.8'
    implementation 'com.karumi:dexter:6.2.2'
}


